// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: champion_stats.sql

package db

import (
	"context"
)

const createChampionStats = `-- name: CreateChampionStats :exec
INSERT INTO champion_stats (
  data,
  last_match_id
) VALUES ($1, $2)
`

type CreateChampionStatsParams struct {
	Data        []byte
	LastMatchID int32
}

func (q *Queries) CreateChampionStats(ctx context.Context, arg CreateChampionStatsParams) error {
	_, err := q.db.Exec(ctx, createChampionStats, arg.Data, arg.LastMatchID)
	return err
}

const lastChampionStats = `-- name: LastChampionStats :one
SELECT id, data, last_match_id, created_at FROM champion_stats ORDER BY created_at DESC LIMIT 1
`

func (q *Queries) LastChampionStats(ctx context.Context) (ChampionStat, error) {
	row := q.db.QueryRow(ctx, lastChampionStats)
	var i ChampionStat
	err := row.Scan(
		&i.ID,
		&i.Data,
		&i.LastMatchID,
		&i.CreatedAt,
	)
	return i, err
}
